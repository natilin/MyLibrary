@model MyLibrary2.ViewModels.CreateSetViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>BookSet</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="bookSet.Name" class="control-label"></label>
                <input asp-for="bookSet.Name" class="form-control" />
                <span asp-validation-for="bookSet.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="LibraryId" class="control-label">Genre</label>
                <select id="LibraryId" name="LibraryId" class="form-control" asp-items="ViewBag.Libraries">
                    <option disabled selected>Select Genre</option>
                </select>
            </div>

            <h4>Books</h4>
            <div id="booksContainer">
                <div class="bookFields">
                    <div class="form-group">
                        <label asp-for="Books[0].Name" class="control-label">Book Name</label>
                        <input asp-for="Books[0].Name" class="form-control" />
                        <span asp-validation-for="Books[0].Name" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Books[0].Height" class="control-label">Height</label>
                        <input asp-for="Books[0].Height" class="form-control" />
                        <span asp-validation-for="Books[0].Height" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Books[0].Width" class="control-label">Width</label>
                        <input asp-for="Books[0].Width" class="form-control" />
                        <span asp-validation-for="Books[0].Width" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <button type="button" id="addBookButton" class="btn btn-secondary">Add Book</button>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.getElementById('addBookButton').addEventListener('click', function () {
            var container = document.getElementById('booksContainer');
            var index = container.getElementsByClassName('bookFields').length;
            var newFields = document.createElement('div');
            newFields.className = 'bookFields';
            newFields.innerHTML = `
                        <div class="form-group">
                            <label for="Books_${index}__Name" class="control-label">Book Name</label>
                            <input name="Books[${index}].Name" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label for="Books_${index}__Height" class="control-label">Height</label>
                            <input name="Books[${index}].Height" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label for="Books_${index}__Width" class="control-label">Width</label>
                            <input name="Books[${index}].Width" class="form-control" />
                        </div>
                    `;
            container.appendChild(newFields);
        });
    </script>
}
